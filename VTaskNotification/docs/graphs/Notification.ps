%!PS-Adobe-2.0
%%Creator: dot version 1.7.14 (Fri Jul  5 09:15:50 MST 2002)
%%For: (sfegan) Stephen Fegan
%%Title: NotificationList
%%Pages: (atend)
%%BoundingBox: 35 35 267 627
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 267 627
%%PageOrientation: Portrait
gsave
35 35 232 592 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
[ /CropBox [36 36 267 627] /PAGES pdfmark
0.000 0.000 0.000 graphcolor
14.00 /Helvetica set_font
% clusterThreadTask
gsave 10 dict begin
dashed
newpath 17 330 moveto
213 330 lineto
213 582 lineto
17 582 lineto
closepath
stroke
gsave 10 dict begin
62 567 moveto 77 -0.5 (Task thread) alignedtext
end grestore
end grestore
% clusterThreadmain
gsave 10 dict begin
dashed
newpath 8 8 moveto
222 8 lineto
222 292 lineto
8 292 lineto
closepath
stroke
gsave 10 dict begin
37 277 moveto 31 -0.5 (GUI) alignedtext
37 261 moveto 44 -0.5 (thread) alignedtext
end grestore
end grestore

%	user
gsave 10 dict begin
0.667 1.000 1.000 nodecolor
newpath 146 536 moveto
130 554 lineto
100 554 lineto
84 536 lineto
100 518 lineto
130 518 lineto
closepath
stroke
gsave 10 dict begin
115 531 moveto 32 -0.5 (User) alignedtext
end grestore
end grestore

%	scheduleNote
gsave 10 dict begin
115 454 90 25 ellipse_path
stroke
gsave 10 dict begin
115 457 moveto 109 -0.5 (NotificationList) alignedtext
115 441 moveto 152 -0.5 (scheduleNotification\(\)) alignedtext
end grestore
end grestore

%	user -> scheduleNote
newpath 115 518 moveto
115 510 115 500 115 490 curveto
stroke
newpath 113 490 moveto
115 480 lineto
118 490 lineto
closepath
fill

%	sendAlert
gsave 10 dict begin
115 364 61 25 ellipse_path
stroke
gsave 10 dict begin
115 367 moveto 93 -0.5 (AsyncAlerter) alignedtext
115 351 moveto 76 -0.5 (sendAlert\(\)) alignedtext
end grestore
end grestore

%	scheduleNote -> sendAlert
newpath 115 428 moveto
115 419 115 409 115 400 curveto
stroke
newpath 113 400 moveto
115 390 lineto
118 400 lineto
closepath
fill

%	receiveAlert
gsave 10 dict begin
115 222 61 25 ellipse_path
stroke
gsave 10 dict begin
115 225 moveto 93 -0.5 (AsyncAlerter) alignedtext
115 209 moveto 93 -0.5 (receiveAlert\(\)) alignedtext
end grestore
end grestore

%	sendAlert -> receiveAlert
gsave 10 dict begin
0.333 1.000 0.392 edgecolor
newpath 115 338 moveto
115 315 115 282 115 257 curveto
stroke
newpath 113 258 moveto
115 248 lineto
118 258 lineto
closepath
fill
gsave 10 dict begin
155 305 moveto 65 -0.5 (somehow) alignedtext
end grestore
end grestore

%	processAll
gsave 10 dict begin
115 132 99 25 ellipse_path
stroke
gsave 10 dict begin
115 135 moveto 109 -0.5 (NotificationList) alignedtext
115 119 moveto 170 -0.5 (processAllNotifications\(\)) alignedtext
end grestore
end grestore

%	receiveAlert -> processAll
newpath 115 196 moveto
115 187 115 177 115 168 curveto
stroke
newpath 113 168 moveto
115 158 lineto
118 168 lineto
closepath
fill

%	doNote
gsave 10 dict begin
115 42 69 25 ellipse_path
stroke
gsave 10 dict begin
115 45 moveto 83 -0.5 (Notification) alignedtext
115 29 moveto 110 -0.5 (doNotification\(\)) alignedtext
end grestore
end grestore

%	processAll -> doNote
newpath 115 106 moveto
115 97 115 87 115 78 curveto
stroke
newpath 113 78 moveto
115 68 lineto
118 78 lineto
closepath
fill
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF
