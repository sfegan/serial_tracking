%!PS-Adobe-2.0
%%Creator: dot version 1.7.14 (Fri Jul  5 09:15:50 MST 2002)
%%For: (sfegan) Stephen Fegan
%%Title: TaskList
%%Pages: (atend)
%%BoundingBox: 35 35 199 685
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 199 685
%%PageOrientation: Portrait
gsave
35 35 164 650 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
[ /CropBox [36 36 199 685] /PAGES pdfmark
0.000 0.000 0.000 graphcolor
14.00 /Helvetica set_font
% clusterThreadTask
gsave 10 dict begin
dashed
newpath 10 298 moveto
152 298 lineto
152 640 lineto
10 640 lineto
closepath
stroke
gsave 10 dict begin
55 625 moveto 77 -0.5 (Task thread) alignedtext
end grestore
end grestore
% clusterThreadmain
gsave 10 dict begin
dashed
newpath 8 8 moveto
154 8 lineto
154 260 lineto
8 260 lineto
closepath
stroke
gsave 10 dict begin
37 245 moveto 31 -0.5 (GUI) alignedtext
37 229 moveto 44 -0.5 (thread) alignedtext
end grestore
end grestore

%	user
gsave 10 dict begin
0.667 1.000 1.000 nodecolor
newpath 112 34 moveto
96 52 lineto
66 52 lineto
50 34 lineto
66 16 lineto
96 16 lineto
closepath
stroke
gsave 10 dict begin
81 29 moveto 32 -0.5 (User) alignedtext
end grestore
end grestore

%	doTask
gsave 10 dict begin
81 586 44 25 ellipse_path
stroke
gsave 10 dict begin
81 589 moveto 33 -0.5 (Task) alignedtext
81 573 moveto 60 -0.5 (doTask\(\)) alignedtext
end grestore
end grestore

%	run
gsave 10 dict begin
81 496 63 25 ellipse_path
stroke
gsave 10 dict begin
81 499 moveto 97 -0.5 (TaskProcessor) alignedtext
81 483 moveto 34 -0.5 (run\(\)) alignedtext
end grestore
end grestore

%	doTask -> run
newpath 81 550 moveto
81 541 81 531 81 522 curveto
stroke
newpath 84 550 moveto
81 560 lineto
79 550 lineto
closepath
fill

%	fetchTask
gsave 10 dict begin
81 406 53 25 ellipse_path
stroke
gsave 10 dict begin
81 409 moveto 58 -0.5 (TaskList) alignedtext
81 393 moveto 78 -0.5 (fetchTask\(\)) alignedtext
end grestore
end grestore

%	run -> fetchTask
newpath 81 460 moveto
81 451 81 441 81 432 curveto
stroke
newpath 84 460 moveto
81 470 lineto
79 460 lineto
closepath
fill

%	wait
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 130 342 moveto
32 342 lineto
32 306 lineto
130 306 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
81 327 moveto 85 -0.5 (JTCMonitor) alignedtext
81 311 moveto 39 -0.5 (wait\(\)) alignedtext
end grestore
end grestore

%	fetchTask -> wait
newpath 81 370 moveto
81 360 81 350 81 342 curveto
stroke
newpath 84 370 moveto
81 380 lineto
79 370 lineto
closepath
fill

%	notify
gsave 10 dict begin
0.000 1.000 1.000 nodecolor
newpath 130 216 moveto
32 216 lineto
32 180 lineto
130 180 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
81 201 moveto 85 -0.5 (JTCMonitor) alignedtext
81 185 moveto 53 -0.5 (notify\(\)) alignedtext
end grestore
end grestore

%	wait -> notify
gsave 10 dict begin
0.000 1.000 1.000 edgecolor
newpath 81 297 moveto
81 273 81 237 81 216 curveto
stroke
newpath 84 296 moveto
81 306 lineto
79 296 lineto
closepath
fill
gsave 10 dict begin
117 273 moveto 58 -0.5 (pthreads) alignedtext
end grestore
end grestore

%	scheduleTask
gsave 10 dict begin
81 116 65 25 ellipse_path
stroke
gsave 10 dict begin
81 119 moveto 58 -0.5 (TaskList) alignedtext
81 103 moveto 101 -0.5 (scheduleTask\(\)) alignedtext
end grestore
end grestore

%	notify -> scheduleTask
newpath 81 171 moveto
81 161 81 151 81 142 curveto
stroke
newpath 84 170 moveto
81 180 lineto
79 170 lineto
closepath
fill

%	scheduleTask -> user
newpath 81 80 moveto
81 70 81 60 81 52 curveto
stroke
newpath 84 80 moveto
81 90 lineto
79 80 lineto
closepath
fill
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF
